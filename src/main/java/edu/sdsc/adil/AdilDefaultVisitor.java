/* Generated By:JavaCC: Do not edit this line. AdilDefaultVisitor.java Version 7.0.10 */
package edu.sdsc.adil;

public class AdilDefaultVisitor implements AdilVisitor{
  public Object defaultVisit(SimpleNode node, Object data){
    node.childrenAccept(this, data);
    return data;
  }
  public Object visit(SimpleNode node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTADILStatement node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTStatement node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTUseClause node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTImportLibrary node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTCreateAnalysis node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTReportStatement node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTStoreStatement node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTAssignmentStatement node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTReturnStatement node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTPropertyGraph node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTGRAPHNODE node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTGRAPHEDGE node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTConstructGraphFromRelationExpression node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTConstructGraphFromRelationFunc node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTConstructGraph node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTpropertyConstraint node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTNodeExpressionConstraint node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTcreateProperty node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTCreateSetStatement node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTcreateNodeStatement node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTcreateEdgeStatement node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTCreateViewStatement node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTGetFunction node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTAWSMFunction node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTrangeElement node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTListCreation node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTFilterAssignment node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTWhereExpression node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTproperty node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTNodeExpression node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTPathExpression node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTCypherStatement node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTMapExpression node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTReduceExpression node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTDBPASS node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTquetedStatement node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTCypherSchema node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTCypherExpression node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTCYPHERPASS node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTCypherForMap node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTSOLRPASS node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTSQLExpression node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTSQLPASS node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTMATRIXASSIGNMENT node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTLITERALASSIGNMENT node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTMATHASSIGNMENT node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTMATHEXPRESSION node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTTUPLEASSIGNMENT node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTTUPLEEXTRACTION node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTLISTASSIGNMENT node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTSTRINGASSIGNMENT node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTListElement node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTLISTEXPRESSION node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTexprsforLambda node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTexprsforLambdaDetail node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTGetLambdaFunction node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTLambdaFunctionExprssion node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ASTExpression node, Object data){
    return defaultVisit(node, data);
  }
}
/* JavaCC - OriginalChecksum=0f8c79f48c8073ff8d6bd3e269fcc912 (do not edit this line) */
